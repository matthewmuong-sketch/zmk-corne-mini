#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

//testing mouse movement and scroll binds...

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <200>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    //

    keymap {
        compatible = "zmk,keymap";

        Abc {
            display-name = "Alphabet";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&none  &kp SQT        &kp COMMA  &kp PERIOD      &kp P      &kp Y        &kp F        &kp G          &kp C            &kp R  &kp L  &none
&none  &kp A          &kp O      &kp E           &kp U      &kp I        &kp D        &kp H          &kp T            &kp N  &kp S  &none
&none  &kp SEMICOLON  &kp Q      &kp J           &kp K      &kp X        &kp B        &kp M          &kp W            &kp V  &kp Z  &none
                                 &kp LEFT_SHIFT  &kp SPACE  &lt 1 TAB    &lt 2 ENTER  &kp BACKSPACE  &kp RIGHT_SHIFT
            >;
        };

        Num {
            display-name = "Numbers and Symbols";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp DOLLAR       &kp SLASH             &kp BACKSLASH          &kp ASTERISK  &kp PLUS     &kp ASTERISK  &kp N7        &kp N8        &kp N9        &kp PLUS   &trans
&trans  &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &kp MINUS    &kp SLASH     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS  &trans
&trans  &kp AMPERSAND    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &kp TILDE    &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL  &trans
                                               &trans                 &trans        &trans       &trans        &trans        &trans
            >;
        };

        Nav {
            display-name = "Navigation";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&trans  &kp HOME    &kp PAGE_UP  &kp UP_ARROW  &kp PAGE_DOWN  &kp LC(C)    &kp LA(TAB)         &kp LG(LC(LEFT_ARROW))  &kp LG(D)      &kp LG(LC(RIGHT))  &kp LS(LG(S))    &trans
&trans  &kp ESCAPE  &kp LEFT     &kp DOWN      &kp RIGHT      &kp LC(V)    &kp LC(LS(ESC))     &kp RCTRL               &kp RALT       &kp RIGHT_GUI      &kp RIGHT_SHIFT  &trans
&trans  &kp END     &kp DEL      &kp LC(Y)     &kp LC(Z)      &kp LC(X)    &kp LC(LA(DELETE))  &sk RIGHT_CONTROL       &sk RIGHT_ALT  &sk RIGHT_GUI      &sk RIGHT_SHIFT  &trans
                                 &caps         &trans         &trans       &trans              &trans                  &trans
            >;
        };

        Sys {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4          &kp F5            &kp F6                &kp F7             &kp F8            &kp F9           &kp F10      &trans
&trans  &kp F11       &kp F12       &bt BT_CLR    &bt BT_CLR_ALL  &studio_unlock    &kp C_BRIGHTNESS_INC  &kp C_PREVIOUS     &kp C_PLAY_PAUSE  &kp C_NEXT       &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4      &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &kp C_MUTE        &kp C_VOLUME_UP  &bootloader  &trans
                                    &trans        &trans          &trans            &trans                &trans             &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Additional {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        alt {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };
};
